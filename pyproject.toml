[tool.poetry]
name = "pycwatch"
version = "1.1.2"
description = "A client library for the Cryptowatch Rest API."
authors = ["ljnsn <82611987+ljnsn@users.noreply.github.com>"]
readme = "README.md"
license = "MIT"
repository = "https://github.com/ljnsn/pycwatch"
homepage = "https://github.com/ljnsn/pycwatch"
keywords = ["cryptocurrency", "crypto", "prices", "cryptowatch"]
classifiers = [
    'Development Status :: 5 - Production/Stable',
    'Environment :: Web Environment',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: MIT License',
    'Operating System :: OS Independent',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3.7',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Topic :: Internet :: WWW/HTTP :: Dynamic Content',
]

[build-system]
requires = ["poetry-core", "poetry>=1.2.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = "^3.7"
requests = "^2.27.1"
api-client = "^1.3.1"
pydantic = "^1.9.0"
api-client-pydantic = "^2.0.0"
importlib-metadata = {version = "<4.3", python = "<3.8"}

[tool.poetry.group.dev.dependencies]
pytest = "^7.0.1"
pytest-cov = ">=3,<5"
pytest-mock = "^3.7.0"
requests-mock = "^1.9.3"
mypy = ">=0.931,<1.3"
black = ">=22.1,<24.0"
coverage = {version = ">=6.3.2,<8.0.0", extras = ["toml"]}
types-requests = "^2.27.11"
vcrpy = "^4.1.1"
commitizen = "^2.38.0"
cz-conventional-gitmoji = "^0.1.2"
ruff = "^0.0.253"

[tool.commitizen]
name = "cz_gitmoji"
version = "1.1.2"
version_files = ["pyproject.toml:^version"]
tag_format = "v$version"
bump_message = "ðŸ”– bump(release): v$current_version â†’ v$new_version"
update_changelog_on_bump = true

[tool.ruff]
select = ["A", "ANN", "ARG", "B", "BLE", "C", "C4", "D", "DTZ", "E", "EM", "ERA", "F", "FBT", "I", "ICN", "ISC", "N", "PGH", "PIE", "PLC", "PLE", "PLR", "PLW", "PT", "Q", "RET", "RUF", "S", "SIM", "T10", "T20", "TID", "UP", "W", "YTT"]
extend-ignore = [
    # Missing docstring in public module
    "D100",
    # Missing docstring in `__init__`
    "D107",
    # Multi-line docstring summary should start at the first line
    "D212",
    # Class attribute `id` is shadowing a python builtin
    "A003",
    # Missing type annotation for `self` in method
    "ANN101",
    # Missing type annotation for `cls` in classmethod
    "ANN102",
    # Dynamically typed expressions (typing.Any) are disallowed in `*args`
    "ANN401",
    # Exception must not use a string literal, assign to variable first
    "EM101",
]
fix = true
unfixable = ["ERA001", "F401", "F841"]
target-version = "py37"
src = ["pycwatch", "tests"]

[tool.ruff.per-file-ignores]
# ignore usage of `assert` in tests
"tests/*" = ["S101"]

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.flake8-tidy-imports]
# Disallow all relative imports.
ban-relative-imports = "all"

[tool.ruff.pep8-naming]
# Allow Pydantic's `@validator` decorator to trigger class method treatment.
classmethod-decorators = ["classmethod", "pydantic.validator"]

[tool.black]
target-version = ["py37", "py38", "py39", "py310", "py311"]

[tool.coverage.run]
branch = true
parallel = true
source = ["pycwatch"]
omit = ["*/vcr_cassettes/*"]

[tool.coverage.report]
fail_under = 90
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "@overload",
    'if __name__ == "__main__":',
    "if TYPE_CHECKING:",
]

[tool.isort]
profile = "black"

[tool.mypy]
# --strict
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
implicit_reexport = false
strict_equality = true
# --strict end

[tool.pydocstyle]
ignore = [
  # missing docstring in __init__
  "D107",
  # 1 blank line required before class docstring
  "D203",
  # multi-line docstring summary should start at the first line
  "D212",
  # multi-line docstring summary should start at the second line
  "D213",
]
