[tool.poetry]
name = "pycwatch-lib"
version = "0.0.0"
description = "A client library for the Cryptowatch Rest API."
authors = ["ljnsn <82611987+ljnsn@users.noreply.github.com>"]
readme = "README.md"
license = "MIT"
repository = "https://github.com/ljnsn/pycwatch"
homepage = "https://github.com/ljnsn/pycwatch"
keywords = ["cryptocurrency", "crypto", "prices", "cryptowatch"]
classifiers = [
  'Development Status :: 5 - Production/Stable',
  'Environment :: Web Environment',
  'Intended Audience :: Developers',
  'License :: OSI Approved :: MIT License',
  'Operating System :: OS Independent',
  'Programming Language :: Python',
  'Programming Language :: Python :: 3.7',
  'Programming Language :: Python :: 3.8',
  'Programming Language :: Python :: 3.9',
  'Programming Language :: Python :: 3.10',
  'Programming Language :: Python :: 3.11',
  'Topic :: Internet :: WWW/HTTP :: Dynamic Content',
]
packages = [{ include = "pycwatch", from = "src" }]

[build-system]
requires = ["poetry-core", "poetry>=1.2.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = "^3.7"
requests = ">=2.27.1"
api-client = ">=1.3.1"
importlib-metadata = { version = "<4.3", python = "<3.8" }
attrs = ">=23.1.0"
cattrs = ">=23.1.2"
ujson = ">=5.7.0"
typing-extensions = { version = ">=4.7.1", python = "<3.10" }

# test dependencies
pytest = { version = ">=7.0.1", optional = true }
pytest-cov = { version = ">=3,<5", optional = true }
pytest-mock = { version = ">=3.7.0", optional = true }
requests-mock = { version = ">=1.9.3", optional = true }
mypy = { version = ">=0.931,<1.4", optional = true }
black = { version = ">=22.1,<23.7", optional = true }
coverage = { version = ">=6.3.2,<7.0.0", extras = ["toml"], optional = true }
types-requests = { version = ">=2.27.11", optional = true }
vcrpy = { version = ">=4.1.1", optional = true }
commitizen = { version = ">=2.38.0", optional = true }
cz-conventional-gitmoji = { version = ">=0.1.2", optional = true }
ruff = { version = ">=0.0.253", optional = true }
pre-commit = { version = "<3.0", optional = true }
types-ujson = { version = ">=5.8.0.1", optional = true }
identify = { version = "<=2.5.24", optional = true }

[tool.poetry.extras]
test = [
  "pytest",
  "pytest-cov",
  "pytest-mock",
  "requests-mock",
  "mypy",
  "black",
  "coverage",
  "types-requests",
  "vcrpy",
  "commitizen",
  "cz-conventional-gitmoji",
  "ruff",
  "pre-commit",
  "types-ujson",
  "identify",
]

[tool.ruff]
extend = "../../pyproject.toml"
src = ["src", "tests"]

[tool.ruff.per-file-ignores]
# ignore usage of `assert` in tests
"tests/*" = [
  # Magic value used in comparison
  "PLR2004",
  # Use `assert` in tests
  "S101",
]

[tool.coverage.run]
branch = true
parallel = true
source = ["src"]
omit = ["*/vcr_cassettes/*"]

[tool.coverage.report]
fail_under = 90
show_missing = true
exclude_lines = [
  "pragma: no cover",
  "@overload",
  'if __name__ == "__main__":',
  "if TYPE_CHECKING:",
]

[tool.mypy]
# --strict
disallow_any_generics = true
disallow_subclassing_any = false
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
implicit_reexport = false
strict_equality = true
pretty = true
show_column_numbers = true
show_error_codes = true
warn_unreachable = true
# TODO: remove this and make stubs
ignore_missing_imports = true
exclude = "src/pycwatch/lib/__init__.py"
# --strict end
